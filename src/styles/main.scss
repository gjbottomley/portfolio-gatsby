@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&display=swap');
$font-family: "Libre Baskerville", serif;

$font-family-alt: "Lato", serif;

//Colors
$coffee: #8A8075;
$coffee-light: #B3A79B;
$sand: #E3D9CE;
$cream: #F5F6EC;
$white: #ffffff;
$black: #222;


$background: $white;
$font-color-light: $white;
$font-color-dark: $black;


*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  font-size: 62.5%;
}

body {
  box-sizing: border-box;
  font-size: 1.6rem;
  padding: 20px;
  background-color: $background;

  font-family: $font-family;
  font-weight: 400;
  font-style: normal;
  color: $font-color-dark;

  position: relative;
  cursor: none; // Hide the original cursor
}

h1 {
    color: $font-color-dark;
    font-weight: 600;
    @media all and (max-width:960px) { 
        font-size: 3rem;
    }
}

h2 {
    font-size: 7rem;

    @media all and (max-width:960px) { 
        font-size: 5rem;
    }
}

.logo {
   
}

main {
    padding: 20px;
    height: calc(100vh - 40px);
    min-height: 480px;
    display: flex;
    justify-content: center;
    align-items: center;


    @media all and (min-width:600px) { 
        min-height: 600px;
    }
}

.content {
    display: flex;
    flex-direction: column;
    gap: 60px;
    max-width: 500px;
    width: 100%;
    text-align: center;
    text-align: left;

    @media all and (min-width:960px) { 
        margin-bottom: 60px;
    }
}

.counter {
    display: flex;
    flex-direction: column;
    @media all and (max-width:960px) { 
        gap: 10px;
    }
}

a {
    cursor: none;
}


.button {
    position: relative;
    background: rgba($white, 0.3);
    font-family: $font-family-alt;
    text-transform: uppercase;
    color: $font-color-dark;
    text-decoration: none;
    padding: 14px 20px;
    transition: 0.4s ease-in-out;

    max-width: 300px;
    text-align: center;
    border-radius: 3px;
    overflow: hidden;

    &::before {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;transition: 0.7s ease-in-out;
            border: 10px solid;
                border-image-slice: 1;
                border-width: 2px;
                border-radius: 6px;
                border-image-source: linear-gradient(90deg, #FF2BE3, #4FEDFF);
        z-index: -1;
    }

    &:hover {
        transform: scale(1.1);
        &::before {
           background: rgba($white, 0.5);
           border-image-source: linear-gradient(-90deg,#FF2BE3, #4FEDFF);
        }
    }
}

.mouse-gradient {
    position: fixed;
    width: 740px;
    height: 740px;
    background: radial-gradient(44.49% 39.31% at 48.43% 50%, rgba(255, 43, 227, 0.3) 0%, rgba(79, 237, 255, 0.3) 46.5%, rgba(255, 255, 255, 0) 100%);
    transform: translate(-50%, -50%);
    border-radius: "50%";
    z-index: -1;
    animation: gradientflux 5s infinite;
}

.custom-cursor {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: rgba($black,0.5);
  position: fixed;
  pointer-events: none;
  z-index: 9999;
  transform: translate(-50%, -50%);

}

@keyframes gradientflux {
    0% {
        opacity: 0.8;
    }

    25% {
        opacity: 0.5;
    }
    
    50% {
        opacity: 0.3;
    }

    100% {
        opacity: 0.8;
    }
}

.side-panel {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    padding: 20px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;

    &:hover {
        .nav-item {
            transform: rotate(0deg);
        }
    }
}

.nav {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 60px;

}

.nav-item {
    transform: rotate(-90deg);
    transform-origin: center;
    transition: 0.2s ease-in-out;flex-basis: 0;
    color: $font-color-dark;
    text-decoration: none;
}

        @for $i from 1 through 20 {
            .nav-item:nth-child(#{$i}) {
                // units are in the variable so SCSS just does math
                animation-delay: $i * 0.5s;
            }
        }